model Post {
  id      String @id
  title   String
  exerpt  String
  content String

  author   Member @relation(fields: [authorId], references: [id], onDelete: SetNull)
  authorId String

  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId String

  published   Boolean   @default(false)
  publishedAt DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tags       Tag[]
  categories Category[]
  comments   Comment[]
}

enum TagColor {
  RED
  BLUE
  GREEN
  YELLOW
  ORANGE
  PURPLE
  PINK
  BLACK
  WHITE
}

model Tag {
  id    String   @id
  name  String
  color TagColor @default(RED)
  posts Post[]

  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  //
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId String
  //
  author         Member?      @relation(fields: [authorId], references: [id], onDelete: SetNull)
  authorId       String?

  @@unique([name, organizationId])
}

model Category {
  id             String       @id
  name           String
  posts          Post[]
  //
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  //
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId String
  //
  author         Member?      @relation(fields: [authorId], references: [id], onDelete: SetNull)
  authorId       String?

  @@unique([name, organizationId])
}

model Comment {
  id      String @id
  name    String @default("Anonymous")
  content String

  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
