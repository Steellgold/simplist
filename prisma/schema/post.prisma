enum Lang {
  EN
  ZH
  HI
  ES
  BN
  RU
  PT
  FR
  UR
  JP
  AR
  KO
  VI
  TH
  GU
  TR
  FA
  DE
  IT
  LN
}

model Post {
  id             String       @id
  title          String
  excerpt        String
  content        String
  slug           String       @default(cuid())
  lang           Lang         @default(EN)
  // 
  author         Member       @relation(fields: [authorId], references: [id], onDelete: SetDefault)
  authorId       String       @default("Deleted User")
  // 
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId String
  // 
  published      Boolean      @default(false)
  publishedAt    DateTime?
  //
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  // 
  tags           Tag[]
  categories     Category[]
  comments       Comment[]
  files          File[]
  variants       Variant[]

  @@unique([slug, organizationId])
}

model Variant {
  id             String       @id
  title          String
  excerpt        String
  content        String
  lang           Lang
  //
  author         Member       @relation(fields: [authorId], references: [id], onDelete: SetDefault)
  authorId       String       @default("Deleted User")
  //
  post           Post         @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId         String
  //
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId String
  //
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model File {
  id             String       @id
  isBanner       Boolean      @default(false)
  name           String
  size           Int
  mimeType       String
  url            String
  //
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  //
  author         Member?      @relation(fields: [authorId], references: [id], onDelete: SetDefault)
  authorId       String?      @default("Deleted User")
  //
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId String
  //
  post           Post?        @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId         String?
}

enum TagColor {
  RED
  BLUE
  GREEN
  YELLOW
  ORANGE
  PURPLE
  PINK
  BLACK
  WHITE
}

model Tag {
  id             String       @id
  name           String
  color          TagColor     @default(RED)
  posts          Post[]
  // 
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  //
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId String
  //
  author         Member?      @relation(fields: [authorId], references: [id], onDelete: SetNull)
  authorId       String?

  @@unique([name, organizationId])
}

model Category {
  id             String       @id
  name           String
  posts          Post[]
  //
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  //
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId String
  //
  author         Member?      @relation(fields: [authorId], references: [id], onDelete: SetNull)
  authorId       String?

  @@unique([name, organizationId])
}

model Comment {
  id        String   @id
  name      String   @default("Anonymous")
  content   String
  // 
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String
  // 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
