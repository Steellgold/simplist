model Organization {
  id             String        @id
  name           String
  slug           String?
  logo           String?
  createdAt      DateTime
  metadata       String?
  Member         Member[]
  Invitation     Invitation[]
  // 
  planType       PlanType      @default(FREE)
  subscription   Subscription? @relation(fields: [subscriptionId], references: [id])
  subscriptionId String?       @unique
  // 
  invoices       Invoice[]
  // 
  trustedDomains String[]
  //
  posts          Post[]
  tags           Tag[]
  categories     Category[]
  variants       Variant[]
  files          File[]
  integrations   Integration[]

  @@unique([slug])
  @@map("organization")
}

model File {
  id             String       @id
  name           String
  size           Int
  url            String
  mimeType       String       @default("image/png")
  //
  member         Member       @relation(fields: [memberId], references: [id], onDelete: Cascade)
  memberId       String
  // 
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  //
  posts          Post[]
  variants       Variant[]
  // 
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model Member {
  id             String       @id
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  userId         String
  email          String
  role           String
  createdAt      DateTime
  //
  posts          Post[]
  tags           Tag[]
  categories     Category[]
  variants       Variant[]
  files          File[]

  @@unique([userId, organizationId])
  @@map("member")
}

model Invitation {
  id             String       @id
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  email          String
  role           String?
  status         String
  expiresAt      DateTime
  inviterId      String
  user           User         @relation(fields: [inviterId], references: [id], onDelete: Cascade)

  @@map("invitation")
}
